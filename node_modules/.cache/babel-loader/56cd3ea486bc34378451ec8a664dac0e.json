{"ast":null,"code":"import _slicedToArray from \"/Users/royceflorentino/Alaga-React-Web-Starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/royceflorentino/Alaga-React-Web-Starter/src/components/LottieAnimation/LottieAnimation.js\";\n\nimport React from 'react';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Lottie from 'react-lottie';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      position: 'fixed',\n      bottom: 0,\n      left: 0\n    }\n  };\n};\n\nvar LottieAnimation = function LottieAnimation(props) {\n  var animation = props.animation,\n      isLooping = props.isLooping;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isPaused = _React$useState2[0],\n      setPaused = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isStopped = _React$useState4[0],\n      setStop = _React$useState4[1];\n\n  var defaultOptions = {\n    loop: isLooping,\n    autoplay: true,\n    animationData: animation.default,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid meet'\n    }\n  };\n  return /*#__PURE__*/React.createElement(Lottie, {\n    options: defaultOptions,\n    height: 300,\n    width: '100%',\n    isStopped: isStopped,\n    isPaused: isPaused,\n    eventListeners: [{\n      eventName: 'complete',\n      callback: function callback() {\n        return props.routeChange();\n      }\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withStyles(styles)(LottieAnimation);","map":{"version":3,"sources":["/Users/royceflorentino/Alaga-React-Web-Starter/src/components/LottieAnimation/LottieAnimation.js"],"names":["React","withStyles","Link","Lottie","styles","theme","root","width","position","bottom","left","LottieAnimation","props","animation","isLooping","useState","isPaused","setPaused","isStopped","setStop","defaultOptions","loop","autoplay","animationData","default","rendererSettings","preserveAspectRatio","eventName","callback","routeChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,QAAQ,EAAE,OAFN;AAGJC,MAAAA,MAAM,EAAE,CAHJ;AAIJC,MAAAA,IAAI,EAAE;AAJF;AADiB,GAAL;AAAA,CAApB;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAAA,MACvBC,SADuB,GACED,KADF,CACvBC,SADuB;AAAA,MACZC,SADY,GACEF,KADF,CACZE,SADY;;AAAA,wBAGDd,KAAK,CAACe,QAAN,CAAe,KAAf,CAHC;AAAA;AAAA,MAGxBC,QAHwB;AAAA,MAGdC,SAHc;;AAAA,yBAIFjB,KAAK,CAACe,QAAN,CAAe,KAAf,CAJE;AAAA;AAAA,MAIxBG,SAJwB;AAAA,MAIbC,OAJa;;AAM/B,MAAMC,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAEP,SADe;AAErBQ,IAAAA,QAAQ,EAAE,IAFW;AAGrBC,IAAAA,aAAa,EAAEV,SAAS,CAACW,OAHJ;AAIrBC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,mBAAmB,EAAE;AADL;AAJG,GAAvB;AASA,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEN,cADX;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,KAAK,EAAE,MAHT;AAIE,IAAA,SAAS,EAAEF,SAJb;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,cAAc,EAAE,CACd;AACEW,MAAAA,SAAS,EAAE,UADb;AAEEC,MAAAA,QAAQ,EAAE;AAAA,eAAMhB,KAAK,CAACiB,WAAN,EAAN;AAAA;AAFZ,KADc,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CA7BD;;AA+BA,eAAe5B,UAAU,CAACG,MAAD,CAAV,CAAmBO,eAAnB,CAAf","sourcesContent":["import React from 'react';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport Lottie from 'react-lottie';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    position: 'fixed', \n    bottom: 0,\n    left: 0\n  }\n});\n \nconst LottieAnimation = props => {\n  const { animation, isLooping } = props;\n\n  const [isPaused, setPaused] = React.useState(false);\n  const [isStopped, setStop] = React.useState(false);\n\n  const defaultOptions = {\n    loop: isLooping,\n    autoplay: true, \n    animationData: animation.default,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid meet'\n    }\n  };\n\n  return (\n    <Lottie\n      options={defaultOptions}\n      height={300}\n      width={'100%'}\n      isStopped={isStopped}\n      isPaused={isPaused}\n      eventListeners={[\n        {\n          eventName: 'complete',\n          callback: () => props.routeChange(),\n        }\n      ]}/>\n  );\n};\n\nexport default withStyles(styles)(LottieAnimation);\n"]},"metadata":{},"sourceType":"module"}